@import '@module';

$grid-columns: 12;
$grid-breakpoints: xs, sm, md, lg, xl;
$grid-dividers: none, extra-small, small, medium, large, extra-large;

.grid {
	width: 100%;
	max-width: 100%;
	margin-left: auto;
	margin-right: auto;
	padding: 0 $bsu;

	&.grid-flush {
		padding: 0;
	}

	&.grid-fluid {
		@include xl {
			width: 100%;
		}
	}

	@include xl {
		width: $container-width;
		padding: 0;
	}
}

.row {
	display: flex;
	flex-wrap: wrap;
	margin-left: -$hsu;
	margin-right: -$hsu;

	&.row-no-gutters {
		margin-left: 0;
		margin-right: 0;

		.col {
			padding-left: 0;
			padding-right: 0;
		}
	}

	&.row-direction-row {
		flex-direction: row;
	}

	&.row-direction-column {
		flex-direction: column;
	}

	&.row-between {
		justify-content: space-between;
	}

	&.row-around {
		justify-content: space-around;
	}

	&.row-start {
		justify-content: flex-start;
	}

	&.row-center {
		justify-content: center;
	}

	&.row-end {
		justify-content: flex-end;
	}

	&.row-top {
		align-items: flex-start;
	}

	&.row-middle {
		align-items: center;
	}

	&.row-bottom {
		align-items: flex-end;
	}

	&.row-stretch {
		align-items: stretch;
	}

	@each $breakpoint in $grid-breakpoints {
		@include breakpoint($breakpoint) {
			@if $breakpoint != xs {
				&.row-direction-row-#{$breakpoint} {
					flex-direction: row;
				}

				&.row-direction-column-#{$breakpoint} {
					flex-direction: column;
				}

				&.row-between-#{$breakpoint} {
					justify-content: space-between;
				}

				&.row-around-#{$breakpoint} {
					justify-content: space-around;
				}

				&.row-start-#{$breakpoint} {
					justify-content: flex-start;
				}

				&.row-center-#{$breakpoint} {
					justify-content: center;
				}

				&.row-end-#{$breakpoint} {
					justify-content: flex-end;
				}

				&.row-top-#{$breakpoint} {
					align-items: flex-start;
				}

				&.row-middle-#{$breakpoint} {
					align-items: center;
				}

				&.row-bottom-#{$breakpoint} {
					align-items: flex-end;
				}

				&.row-stretch-#{$breakpoint} {
					align-items: stretch;
				}
			}
		}
	}
}

.col {
	padding-left: $hsu;
	padding-right: $hsu;
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;

	&.col-first {
		order: -1;
	}

	&.col-last {
		order: 1;
	}

	&.col-shrink {
		flex: 0 1 auto;
	}

	@each $breakpoint in $grid-breakpoints {
		@include breakpoint($breakpoint) {
			@if $breakpoint != xs {
				&.col-#{$breakpoint} {
					flex-basis: 0;
					flex-grow: 1;
					max-width: 100%;
				}

				&.col-first-#{$breakpoint} {
					order: 1;
				}

				&.col-last-#{$breakpoint} {
					order: 9999;
				}

				&.col-shrink-#{$breakpoint} {
					flex: 0 1 auto;
				}
			}
		}
	}

	@for $i from 1 through $grid-columns {
		&.col-#{$i} {
			max-width: percentage($i / $grid-columns);
			flex: 0 0 percentage($i / $grid-columns);
		}
	}

	@each $breakpoint in $grid-breakpoints {
		@for $i from 1 through $grid-columns {
			@include breakpoint($breakpoint) {
				@if $breakpoint != xs {
					&.col-#{$breakpoint}-#{$i} {
						max-width: percentage($i / $grid-columns);
						flex: 0 0 percentage($i / $grid-columns);
					}
				}
			}
		}
	}
}

// our own implementation of a spacer (so components don't have to manage there own outer spacing)
.divider {
	display: flex;
	width: 100%;

	&.divider-none {
		margin-bottom: 0;
	}

	&.divider-extra-small {
		margin-bottom: $qsu;
	}

	&.divider-small {
		margin-bottom: $hsu;
	}

	&.divider-medium {
		margin-bottom: $bsu;
	}

	&.divider-large {
		margin-bottom: $bsu * 1.5;
	}

	&.divider-extra-large {
		margin-bottom: $dsu;
	}

	@each $breakpoint in $grid-breakpoints {
		@include breakpoint($breakpoint) {
			@if $breakpoint != xs {
				&.divider-#{$breakpoint}-none {
					margin-bottom: 0;
				}

				&.divider-#{$breakpoint}-extra-small {
					margin-bottom: $qsu;
				}

				&.divider-#{$breakpoint}-small {
					margin-bottom: $hsu;
				}

				&.divider-#{$breakpoint}-medium {
					margin-bottom: $bsu;
				}

				&.divider-#{$breakpoint}-large {
					margin-bottom: $bsu * 1.5;
				}

				&.divider-#{$breakpoint}-extra-large {
					margin-bottom: $dsu;
				}
			}
		}
	}
}
