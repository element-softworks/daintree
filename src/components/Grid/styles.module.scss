@import '@module';

$grid-columns: 12;
$grid-breakpoints: xs, sm, md, lg, xl;

.grid {
	width: 100%;
	max-width: 100%;
	margin-left: auto;
	margin-right: auto;

	&.grid-fluid {
		@include xl {
			width: 100%;
		}
	}

	@include xl {
		width: $container-width;
	}
}

.row {
	display: flex;
	flex-wrap: wrap;
	margin-left: -$hsu;
	margin-right: -$hsu;

	&.row-no-gutters {
		margin-left: 0;
		margin-right: 0;

		.col {
			padding-left: 0;
			padding-right: 0;
		}
	}

	//@for $i from 1 through $grid-columns {
	//    .grid-#{$i} {
	//        width: percentage($i / $grid-columns);
	//    }
	//}

	@each $breakpoint in $grid-breakpoints {
		@include breakpoint($breakpoint) {
			@if $breakpoint == xs {
				&.row-direction-row {
					flex-direction: row;
				}

				&.row-direction-column {
					flex-direction: column;
				}

				&.between {
					justify-content: space-between;
				}

				&.around {
					justify-content: space-around;
				}

				&.start {
					justify-content: flex-start;
				}

				&.center {
					justify-content: center;
				}

				&.end {
					justify-content: flex-end;
				}

				&.top {
					align-items: flex-start;
				}

				&.middle {
					align-items: center;
				}

				&.bottom {
					align-items: flex-end;
				}
			} @else {
				&.row-direction-row-#{$breakpoint} {
					flex-direction: row;
				}

				&.row-direction-column-#{$breakpoint} {
					flex-direction: column;
				}

				&.between-#{$breakpoint} {
					justify-content: space-between;
				}

				&.around-#{$breakpoint} {
					justify-content: space-around;
				}

				&.start-#{$breakpoint} {
					justify-content: flex-start;
				}

				&.center-#{$breakpoint} {
					justify-content: center;
				}

				&.end-#{$breakpoint} {
					justify-content: flex-end;
				}

				&.top-#{$breakpoint} {
					align-items: flex-start;
				}

				&.middle-#{$breakpoint} {
					align-items: center;
				}

				&.bottom-#{$breakpoint} {
					align-items: flex-end;
				}
			}
		}
	}

	//&.row-direction-row-xs {
	//    flex-direction: row;
	//}
	//
	//&.row-direction-column-xs {
	//    flex-direction: column;
	//}
	//
	//@include sm {
	//    &.row-direction-row-sm {
	//        flex-direction: row;
	//    }
	//
	//    &.row-direction-column-sm {
	//        flex-direction: column;
	//    }
	//}
	//
	//@include md {
	//    &.row-direction-row-md {
	//        flex-direction: row;
	//    }
	//
	//    &.row-direction-column-md {
	//        flex-direction: column;
	//    }
	//}
	//
	//@include lg {
	//    &.row-direction-row-lg {
	//        flex-direction: row;
	//    }
	//
	//    &.row-direction-column-lg {
	//        flex-direction: column;
	//    }
	//}
	//
	//@include xl {
	//    &.row-direction-row-xl {
	//        flex-direction: row;
	//    }
	//
	//    &.row-direction-column-xl {
	//        flex-direction: column;
	//    }
	//}
}

.col {
	padding-left: $hsu;
	padding-right: $hsu;
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;

	@each $breakpoint in $grid-breakpoints {
		@include breakpoint($breakpoint) {
			@if $breakpoint != xs {
				&.col-#{$breakpoint} {
					flex-basis: 0;
					flex-grow: 1;
					max-width: 100%;
				}
			}
		}
	}

	@for $i from 1 through $grid-columns {
		&.col-#{$i} {
			max-width: percentage($i / $grid-columns);
			flex: 0 0 percentage($i / $grid-columns);
		}
	}

	@each $breakpoint in $grid-breakpoints {
		@for $i from 1 through $grid-columns {
			@include breakpoint($breakpoint) {
				@if $breakpoint != xs {
					&.col-#{$breakpoint}-#{$i} {
						max-width: percentage($i / $grid-columns);
						flex: 0 0 percentage($i / $grid-columns);
					}
				}
			}
		}
	}

	//@mixin shrink {
	//    flex-shrink: 1;
	//    flex-grow: 0;
	//    flex-basis: auto;
	//}
	//
	//@mixin grow {
	//    flex-shrink: 0;
	//    flex-grow: 1;
	//    flex-basis: auto;
	//}
	//
	//&.col-shrink,
	//&.col-xs-shrink {
	//    @include shrink;
	//}
	//
	//&.col-grow,
	//&.col-xs-grow {
	//    @include grow;
	//}
	//
	//@include sm {
	//    &.col-sm-shrink {
	//        @include shrink;
	//    }
	//
	//    &.col-sm-grow {
	//        @include grow;
	//    }
	//}
	//
	//@include md {
	//    &.col-md-shrink {
	//        @include shrink;
	//    }
	//
	//    &.col-md-grow {
	//        @include grow;
	//    }
	//}
	//
	//@include lg {
	//    &.col-lg-shrink {
	//        @include shrink;
	//    }
	//
	//    &.col-lg-grow {
	//        @include grow;
	//    }
	//}
	//
	//@include xl {
	//    &.col-xl-shrink {
	//        @include shrink;
	//    }
	//
	//    &.col-xl-grow {
	//        @include grow;
	//    }
	//}
}

// our own implementation of a spacer (so components don't have to manage there own outer spacing)
.divider {
	display: flex;
	width: 100%;

	&.divider-none,
	&.divider-xs-none {
		margin-bottom: 0;
	}

	&.divider-extra-small,
	&.divider-xs-extra-small {
		margin-bottom: $qsu;
	}

	&.divider-small,
	&.divider-xs-small {
		margin-bottom: $hsu;
	}

	&.divider-medium,
	&.divider-xs-medium {
		margin-bottom: $bsu;
	}

	&.divider-large,
	&.divider-xs-large {
		margin-bottom: $bsu * 1.5;
	}

	&.divider-extra-large,
	&.divider-xs-extra-large {
		margin-bottom: $dsu;
	}

	@include sm {
		&.divider-sm-none {
			margin-bottom: 0;
		}

		&.divider-sm-extra-small {
			margin-bottom: $qsu;
		}

		&.divider-sm-small {
			margin-bottom: $hsu;
		}

		&.divider-sm-medium {
			margin-bottom: $bsu;
		}

		&.divider-sm-large {
			margin-bottom: $bsu * 1.5;
		}

		&.divider-sm-extra-large {
			margin-bottom: $dsu;
		}
	}

	@include md {
		&.divider-md-none {
			margin-bottom: 0;
		}

		&.divider-md-extra-small {
			margin-bottom: $qsu;
		}

		&.divider-md-small {
			margin-bottom: $hsu;
		}

		&.divider-md-medium {
			margin-bottom: $bsu;
		}

		&.divider-md-large {
			margin-bottom: $bsu * 1.5;
		}

		&.divider-md-extra-large {
			margin-bottom: $dsu;
		}
	}

	@include lg {
		&.divider-lg-none {
			margin-bottom: 0;
		}

		&.divider-lg-extra-small {
			margin-bottom: $qsu;
		}

		&.divider-lg-small {
			margin-bottom: $hsu;
		}

		&.divider-lg-medium {
			margin-bottom: $bsu;
		}

		&.divider-lg-large {
			margin-bottom: $bsu * 1.5;
		}

		&.divider-lg-extra-large {
			margin-bottom: $dsu;
		}
	}

	@include xl {
		&.divider-xl-none {
			margin-bottom: 0;
		}

		&.divider-xl-extra-small {
			margin-bottom: $qsu;
		}

		&.divider-xl-small {
			margin-bottom: $hsu;
		}

		&.divider-xl-medium {
			margin-bottom: $bsu;
		}

		&.divider-xl-large {
			margin-bottom: $bsu * 1.5;
		}

		&.divider-xl-extra-large {
			margin-bottom: $dsu;
		}
	}
}
